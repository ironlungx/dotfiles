#! /usr/bin/bash
#install script for the dotfiles

R='\033[0;31m'   #'0;31' is Red's ANSI color code
G='\033[0;32m'   #'0;32' is Green's ANSI color code
Y='\033[1;32m'   #'1;32' is Yellow's ANSI color code
B='\033[0;34m'   #'0;34' is Blue's ANSI color code
NC='\033[0m' # No Color

pause() {
  printf "${Y} Press any key to continue${NC}"
  read -n 1 -s -r  
  printf "\r"
}

set -e
printf "${R}# Hello there, looks like you want to yoink my dots. :D ${NC}\n"
sleep 2

HELPER="paru"

printf "${R}# Updating your system (sudo pacman -Syu)${NC}\n"
echo 
sudo pacman --noconfirm -Syu

pause

printf "${R}# Installing libnewt on your system${NC}\n"
echo
sudo pacman -S --noconfirm libnewt
pause

printf "${R}# Installing base packages (base-devel, wget, git) ${NC}\n"
sudo pacman --noconfirm --needed -S base-devel wget git

echo

printf "${R} # Video driver${NC}"
echo 

# echo "1) xf86-video-intel 	2) xf86-video-amdgpu 3) nvidia 4) Skip"
# read -r -p "Choose you video card driver(default 4)(will not re-install): " vid

vid=$(whiptail --title "Graphics Driver" --menu "Choose a graphics driver for your system" 25 60 16 \
             "xf86-video-intel" "Intel drivers" \
             "xf86-video-amdgpu" "AMD drivers" \
             "nvidia nvidia-settings nvidia-utils" "Nvidia drivers" \
             "Skip" "No drivers" 3>&1 1>&2 2>&3 )

if [ "$vid" = "Skip" ]; then 
  vid="" 
fi


PACKAGES=$(for x in $(cat packagelist | sed  's/[ \t]*$//' | cut -d' ' -f1 ); do printf "$x " ; done)
PKG_PROMPT=$(for x in $PACKAGES ; do printf "    - $x\n"; done)

whiptail --title "Packages from standard repo" --yesno "The following packages will be installed would you like to proceed?\n$PKG_PROMPT" 25 75 

exitstatus=$?

exitstatus=$?
if [ $exitstatus = 0 ]; then
  echo "ok"
else
  echo "User canceled input."
fi

sudo pacman -S --needed $PACKAGES

pause
clear

# printf "${R} # Packages have been installed${NC}\n"
# printf "${R} # AUR helper ${NC}\n"
#
#
# printf "${Y}We need an AUR helper. It is essential. 1) paru       2) yay\nWhat is the AUR helper of your choice? (default is paru): ${NC}"
# read -r num
#
# echo
#
# if [ $num -eq 2 ]
# then
#     HELPER="yay"
# fi

# Show a message that packages have been installed
whiptail --title "Packages Installed" --msgbox "${R}Packages have been installed${NC}" 8 50

# Display a yes/no style dialog with "yay" as "Yes" and "paru" as "No"
whiptail --title "AUR Helper Selection" --yesno "${Y}Choose your AUR helper:${NC}\nYes -> yay\nNo -> paru" 10 60 --yes-button "yay" --no-button "paru"

# Set the AUR helper based on the user's choice
if [ $? -eq 0 ]; then
    HELPER="yay"
else
    HELPER="paru"
fi

# Echo the chosen AUR helper
echo "Selected AUR helper: $HELPER"

if ! command -v $HELPER &> /dev/null
then
  rm -rf ~/.srcs/$HELPER
  echo "It seems that you don't have $HELPER installed, I'll install that for you before continuing."
	git clone https://aur.archlinux.org/$HELPER.git ~/.srcs/$HELPER
	(cd ~/.srcs/$HELPER/ && makepkg -si )
fi

AUR_PACKS="$(echo $(for x in $(cat packagelist-aur | sed  's/[ \t]*$//' | cut -d' ' -f1 ); do printf "$x " ; done))"


# $HELPER --quiet -S rofi-greenclip i3lock-fancy-git ttf-jetbrains-mono cava rofi-bluetooth-git
$HELPER --quiet -S $AUR_PACKS

printf "${R} # All packages installed ${NC}\n"

pause
clear

printf "${Y} Would you like to use fish as your default shell ${NC}? (Y/n)"
read -r choice

case "$choice" in
  [Yy]) chsh -s /usr/bin/fish
esac

echo

printf "${Y} Would you like to install dotfiles t"
